<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator">
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="objectMapper"/>
	        </bean>
	        <bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter">
	            <property name="objectMapper" ref="xmlMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Localization of hibernate messages during validation! -->
    <bean name="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource">
            <ref bean="messageSource" />
        </property>
    </bean>
    <context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.cookingrecipe.controller" />
	<context:component-scan base-package="com.cookingrecipe.service" />
	<context:component-scan base-package="com.cookingrecipe.dao" />
 	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes">
	        <value>
	            json=application/json
	            xml=application/xml
	        </value>
	    </property>
	</bean>
 	<!-- resources -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
<!-- 	<mvc:resources mapping="/webjars/**" location="/webjars/" /> -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="myAppLocaleCookie" />
		<property name="cookieMaxAge" value="3600" />
	</bean>
		
	<mvc:interceptors>
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    	<property name="paramName" value="locale" />
	    </bean>
	</mvc:interceptors>
     <!-- SpringResourceTemplateResolver automatically integrates with Spring's own -->
	<!-- resource resolution infrastructure, which is highly recommended.          -->
	<bean id="templateResolver"
	       class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
	  <property name="prefix" value="/html/" />
	  <property name="suffix" value=".html" />
	  <!-- HTML is the default value, added here for the sake of clarity.          -->
	  <property name="templateMode" value="HTML" />
	  <!-- Template cache is true by default. Set to false if you want             -->
	  <!-- templates to be automatically updated when modified.                    -->
	  <property name="cacheable" value="false" />
	</bean>
	    
	<!-- SpringTemplateEngine automatically applies SpringStandardDialect and      -->
	<!-- enables Spring's own MessageSource message resolution mechanisms.         -->
	<bean id="templateEngine"
	      class="org.thymeleaf.spring5.SpringTemplateEngine">
	  <property name="templateResolver" ref="templateResolver" />
	  <!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed up  -->
	  <!-- execution in most scenarios, but might be incompatible with specific    -->
	  <!-- cases when expressions in one template are reused across different data -->
	  <!-- ypes, so this flag is "false" by default for safer backwards            -->
	  <!-- compatibility.                                                          -->
	  <property name="enableSpringELCompiler" value="true" />
	  <property name="additionalDialects">
	    <set>
	      <!-- Note the package would change to 'springsecurity[3|4]' if you are using that version -->
	      <bean class="org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect"/>
	    </set>
	  </property>
	</bean>
    
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
  		<property name="templateEngine" ref="templateEngine" />
  		<!-- NOTE 'order' and 'viewNames' are optional -->
  		<property name="order" value="1" />
  		<!-- <property name="viewNames" value="*.html,*.xhtml" /> -->
	</bean>
</beans>